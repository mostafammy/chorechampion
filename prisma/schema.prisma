// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id       String  @id @default(cuid()) // Or UUID
  name     String?
  email    String  @unique
  password String // Hashed (bcrypt, argon2, etc.)

  emailVerified DateTime? // Email confirmation status (optional but HIGHLY recommended)
  image         String? // Profile picture (optional)
  role          Role      @default(USER) // Authorization, enum based (ADMIN, USER, etc.)

  createdAt DateTime? @default(now())
  updatedAt DateTime  @updatedAt

  // Optional extras for security and session management
  isTwoFactorEnabled Boolean   @default(false)
  lastLoginAt        DateTime?
  loginAttempts      Int       @default(0)
  isBanned           Boolean   @default(false)

  // Relations to other models (if needed)
  posts    Post[] // Example: blog posts authored by the user
  sessions Session[] // If using a custom auth/session system
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  author    User     @relation(fields: [authorId], references: [id])
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Session {
  id        String    @id @default(cuid())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime  @default(now())
  expiresAt DateTime? // Optional, can be null
}
